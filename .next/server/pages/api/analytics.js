"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/analytics";
exports.ids = ["pages/api/analytics"];
exports.modules = {

/***/ "fs-extra":
/*!***************************!*\
  !*** external "fs-extra" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("fs-extra");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalytics&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalytics.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalytics&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalytics.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_analytics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\analytics.js */ \"(api)/./pages/api/analytics.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_analytics_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_analytics_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/analytics\",\n        pathname: \"/api/analytics\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_analytics_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFuYWx5dGljcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDYW5hbHl0aWNzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3VEO0FBQ3ZEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxvREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsb0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLXRlc3QtYXV0b21hdGlvbi1mcmFtZXdvcmsvPzRjNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxhbmFseXRpY3MuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbmFseXRpY3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hbmFseXRpY3NcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalytics&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalytics.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/analytics.js":
/*!********************************!*\
  !*** ./pages/api/analytics.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs_extra__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs-extra */ \"fs-extra\");\n/* harmony import */ var fs_extra__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_extra__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function handler(req, res) {\n    const reportsDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"reports\");\n    try {\n        if (req.method !== \"GET\") {\n            return res.status(405).json({\n                message: \"Method not allowed\"\n            });\n        }\n        // Pastikan direktori reports ada\n        if (!await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().pathExists(reportsDir)) {\n            return res.status(200).json({\n                summary: {\n                    totalReports: 0,\n                    trends: [],\n                    testTypeStats: {}\n                },\n                trends: {\n                    daily: [],\n                    weekly: [],\n                    testTypes: []\n                },\n                performance: {\n                    averageDuration: 0,\n                    successRateHistory: []\n                }\n            });\n        }\n        const files = await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().readdir(reportsDir);\n        const reports = [];\n        // Collect all report data\n        for (const file of files){\n            if (file.endsWith(\".json\") && file.startsWith(\"test-report-\")) {\n                try {\n                    const reportPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(reportsDir, file);\n                    const report = await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().readJson(reportPath);\n                    reports.push(report);\n                } catch (error) {\n                    console.error(`Error reading report ${file}:`, error);\n                }\n            }\n        }\n        // Calculate analytics\n        const analytics = calculateAnalytics(reports);\n        return res.status(200).json(analytics);\n    } catch (error) {\n        console.error(\"Analytics API error:\", error);\n        return res.status(500).json({\n            message: \"Failed to generate analytics\",\n            error: error.message\n        });\n    }\n}\nfunction calculateAnalytics(reports) {\n    if (reports.length === 0) {\n        return {\n            summary: {\n                totalReports: 0,\n                trends: [],\n                testTypeStats: {}\n            },\n            trends: {\n                daily: [],\n                weekly: [],\n                testTypes: []\n            },\n            performance: {\n                averageDuration: 0,\n                successRateHistory: []\n            }\n        };\n    }\n    // Sort reports by date\n    const sortedReports = reports.sort((a, b)=>new Date(a.framework?.startTime) - new Date(b.framework?.startTime));\n    // Calculate summary stats\n    const totalReports = reports.length;\n    const totalTests = reports.reduce((sum, r)=>sum + (r.summary?.totalTests || 0), 0);\n    const totalPassed = reports.reduce((sum, r)=>sum + (r.summary?.passed || 0), 0);\n    const totalFailed = reports.reduce((sum, r)=>sum + (r.summary?.failed || 0), 0);\n    const averageSuccessRate = totalTests > 0 ? totalPassed / totalTests * 100 : 0;\n    const averageDuration = reports.reduce((sum, r)=>sum + (r.framework?.duration || 0), 0) / reports.length;\n    // Calculate test type statistics\n    const testTypeStats = {};\n    reports.forEach((report)=>{\n        Object.keys(report.testTypes || {}).forEach((testType)=>{\n            if (!testTypeStats[testType]) {\n                testTypeStats[testType] = {\n                    name: testType,\n                    totalRuns: 0,\n                    totalTests: 0,\n                    passed: 0,\n                    failed: 0,\n                    averageDuration: 0,\n                    successRate: 0\n                };\n            }\n            const testData = report.testTypes[testType];\n            testTypeStats[testType].totalRuns++;\n            testTypeStats[testType].totalTests += testData.summary?.totalTests || 0;\n            testTypeStats[testType].passed += testData.summary?.passed || 0;\n            testTypeStats[testType].failed += testData.summary?.failed || 0;\n            testTypeStats[testType].averageDuration += testData.duration || 0;\n        });\n    });\n    // Calculate averages for test types\n    Object.values(testTypeStats).forEach((stat)=>{\n        stat.averageDuration = stat.averageDuration / stat.totalRuns;\n        stat.successRate = stat.totalTests > 0 ? stat.passed / stat.totalTests * 100 : 0;\n    });\n    // Calculate trends (last 30 days)\n    const dailyTrends = calculateDailyTrends(sortedReports);\n    const testTypeTrends = calculateTestTypeTrends(sortedReports);\n    // Performance trends\n    const successRateHistory = sortedReports.map((report)=>({\n            date: report.framework?.startTime,\n            successRate: report.summary?.totalTests > 0 ? report.summary.passed / report.summary.totalTests * 100 : 0,\n            duration: report.framework?.duration || 0,\n            totalTests: report.summary?.totalTests || 0\n        }));\n    return {\n        summary: {\n            totalReports,\n            totalTests,\n            totalPassed,\n            totalFailed,\n            averageSuccessRate: Math.round(averageSuccessRate * 100) / 100,\n            averageDuration: Math.round(averageDuration),\n            testTypeStats: Object.values(testTypeStats)\n        },\n        trends: {\n            daily: dailyTrends,\n            testTypes: testTypeTrends\n        },\n        performance: {\n            averageDuration: Math.round(averageDuration),\n            successRateHistory,\n            durationTrend: calculateDurationTrend(sortedReports)\n        }\n    };\n}\nfunction calculateDailyTrends(reports) {\n    const dailyData = {};\n    reports.forEach((report)=>{\n        const date = new Date(report.framework?.startTime).toISOString().split(\"T\")[0];\n        if (!dailyData[date]) {\n            dailyData[date] = {\n                date,\n                totalTests: 0,\n                passed: 0,\n                failed: 0,\n                reports: 0,\n                duration: 0\n            };\n        }\n        dailyData[date].totalTests += report.summary?.totalTests || 0;\n        dailyData[date].passed += report.summary?.passed || 0;\n        dailyData[date].failed += report.summary?.failed || 0;\n        dailyData[date].reports++;\n        dailyData[date].duration += report.framework?.duration || 0;\n    });\n    return Object.values(dailyData).map((day)=>({\n            ...day,\n            successRate: day.totalTests > 0 ? day.passed / day.totalTests * 100 : 0,\n            averageDuration: day.duration / day.reports\n        }));\n}\nfunction calculateTestTypeTrends(reports) {\n    const testTypeData = {};\n    reports.forEach((report)=>{\n        Object.entries(report.testTypes || {}).forEach(([testType, data])=>{\n            if (!testTypeData[testType]) {\n                testTypeData[testType] = [];\n            }\n            testTypeData[testType].push({\n                date: report.framework?.startTime,\n                status: data.status,\n                duration: data.duration,\n                totalTests: data.summary?.totalTests || 0,\n                passed: data.summary?.passed || 0,\n                failed: data.summary?.failed || 0\n            });\n        });\n    });\n    return Object.entries(testTypeData).map(([testType, history])=>({\n            testType,\n            history,\n            averageSuccessRate: history.length > 0 ? history.reduce((sum, h)=>sum + (h.totalTests > 0 ? h.passed / h.totalTests * 100 : 0), 0) / history.length : 0\n        }));\n}\nfunction calculateDurationTrend(reports) {\n    if (reports.length < 2) return 0;\n    const recent = reports.slice(-5).reduce((sum, r)=>sum + (r.framework?.duration || 0), 0) / 5;\n    const older = reports.slice(0, -5).reduce((sum, r)=>sum + (r.framework?.duration || 0), 0) / Math.max(1, reports.length - 5);\n    return (recent - older) / older * 100;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/analytics.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalytics&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalytics.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();